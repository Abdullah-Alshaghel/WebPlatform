import "Apm";
Apm.importFile("Alusus/WebPlatform");

use Srl;
use WebPlatform;

func createUi (buttonText: ptr[Char]) {
    createElement("div", "myDiv", "body");
    setElementAttribute("myDiv", "style", "text-align: center;");
    createElement("p", "myText", "myDiv");
    setElementAttribute("myText", "innerHTML", "<< لا إله إلا الله >>");
    System.sleep(2000000);
    createElement("p", "myText2", "myDiv");
    setElementAttribute("myText2", "innerHTML", "محمد رسول الله");
    setElementAttribute("myText2", "style", "color: green;");
    System.sleep(2000000);
    createElement("button", "myButton", "myDiv");
    setElementAttribute("myButton", "innerHTML", buttonText);
}

func getUiCreator (): ptr[function (ptr[Char])] {
    return createUi~ptr;
}

@uiEndpoint["/", "WebPlatform Example"]
func index {
    def mem: ref[array[Char]];
    mem~ptr = Memory.alloc(1)~cast[ptr[array[Char]]];
    setElementAttribute("body", "dir", "rtl");
    if mem~ptr == 0 {
        createElement("p", "myText", "body");
        setElementAttribute("myText", "innerHTML", "memory allocation failed");
    } else {
        mem(0) = 'O';
        mem(1) = 'k';
        mem(2) = 0;
        mem~ptr = Memory.realloc(mem~ptr, 100000)~cast[ptr[array[Char]]];
        def i: Int;
        for i = 3, i < 100000, ++i mem(i) = 1;
        def pf: ptr[function (ptr[Char])] = getUiCreator();
        pf(mem~ptr);
        // createElement("p", "myText", "body");
        // setElementAttribute("myText", "innerHTML", "بسم الله الرحمن الرحيم");
        // createElement("button", "myButton", "body");
        // setElementAttribute("myButton", "innerHTML", mem~ptr);
    }
    Memory.free(mem~ptr);
}

@uiEndpoint["/testget", "WebPlatform Example - Get Attribute Test"]
func testGet {
    createElement("input", "myInput", "body");
    System.sleep(5000000);
    createElement("p", "myText", "body");
    setElementAttribute("myText", "innerHTML", getElementAttribute("myInput", "value"));
}

@uiEndpoint["/testui", "WebPlatform Example - Test UI Widgets"]
func testUi {
    def label: SrdRef[Label] = Label.new(String("السلام عليكم"));
    def button: SrdRef[Button] = Button.new(String("انطلق"));
    button.onClick.connect(onButtonClicked~ptr, label.obj~ptr);
    setView(Box.new({
        Box.new({ label }),
        button
    }));
    runEventLoop();
}

macro prepCastedArg [varName, varType, argName] {
    def varName: ref[varType];
    varName~ptr = argName~cast[ptr[varType]];
}

func onButtonClicked (widget: ref[Button], payload: ref[Int], extra: ptr) {
    prepCastedArg[label, Label, extra];
    @shared def count: Int(0);
    label.setText(String.format("نُقر الزر %i مرة/مرات", ++count));
}

@uiEndpoint["/about", "WebPlatform Example - About"]
func enAbout {
    createElement("p", "myText", "body");
    setElementAttribute("myText", "innerHTML", "Author: Sarmad Khalid Abdullah");
}

@uiEndpoint["/عنا", "WebPlatform Ex - عنا"]
func arAbout {
    createElement("p", "myText", "body");
    setElementAttribute("myText", "innerHTML", "برمجة: سرمد خالد عبد الله");
}

Console.print("Starting server on port 8080...\nURL: http://localhost:8080/\n");
startServer({ "listening_ports", "8080", "static_file_max_age", "0" });

